[{"content":"草嶺古道芒花季 又到了一年一度的芒草季節，講了好多年今年終於追到芒草！\n山上的芒草 ","description":"Silver grass mountain in Northern Taiwan","tags":["taiwan","taipei","travel"],"title":"草嶺古道","uri":"/xuan-site/travel/mt1201/"},{"content":"第0️⃣篇文 發文測試，希望這是我最後一個測試的主題。 希望這篇文章有人看。\n","description":"HUGO 網站上線中","tags":["hugo"],"title":"Start from Hugo","uri":"/xuan-site/posts/my-first-post/"},{"content":"Hugo comes in three versions: Standard, Extended, and Extended/Deploy. The Standard edition covers core functionalities, while Extended adds advanced options, with Extended/Deploy** offering further deployment features.\nSetting Up Your Directories Open File Explorer and create a folder, e.g., C:\\Hugo, and inside it, a bin folder. Installing Hugo Download the latest Hugo executable from Hugo releases.\nExtract the contents into ..\\Hugo\\bin.\nOpen Command Prompt as Administrator and add Hugo to the PATH:\nsetx PATH \"%PATH%;C:\\Hugo\\bin\" Alternatively, add C:\\Hugo\\bin via Environment Variables.\nVerify the installation by typing hugo help in the command prompt.\nHugo in Command Prompt\nYou can check the offical documentation for more installation details here.\n","description":"In this guide, we'll walk through installing Hugo, a popular static site generator. Whether you’re new to static site development or transitioning from another tool, we’ll cover the essential steps to get Hugo up and running.","tags":["hugo","blog"],"title":"Install Hugo in Windows","uri":"/xuan-site/post/2020/install-hugo/"},{"content":"In this post, we’ll cover how to install Hugo and set up your first website with the Lightbi theme. For detailed steps, refer to Hugo’s quick-start guide.\nCreate a New Hugo Site hugo new site \u003cname of site\u003e cd \u003cname of site\u003e git init git submodule add https://github.com/binokochumolvarghese/lightbi-hugo themes/lightbi-hugo After completing the steps above, copy the contents of exampleSite/contents into the content folder of your website.\nNext, copy hugo.toml to the root folder of the website.\nFinally, run the following command.\nhugo server Preview Your Site:\nGo to http://localhost:1313/ to view your website in development mode. That’s it! You’re ready to start building.\n","description":"In this post, we'll cover how to install Hugo and set up your first website with the Lightbi theme...","tags":["hugo","blog"],"title":"How to use Lightbi theme ?","uri":"/xuan-site/post/2020/use-this-theme/"},{"content":"General Three Main Content Sections:\nBlog Notes Collections (Newsletter) Responsive Design:\nBuilt with a mobile-first approach for seamless viewing on any device. Card-Based Theme:\nFlexible image placement options: Image at the top of the card Image in the middle of the card Image at the bottom of the card No image option Menu Location Indicator:\nClear visual cues for active menu items. Multilingual Support:\nIncludes a language selector for easy switching between languages. Taxonomies:\nOrganize content effectively with customizable tags and categories. Search Functionality:\nIntegrated search option for quick content access. Light/Dark Theme:\nAutomatic theme switching based on browser preferences. Includes a manual theme-switch button for user control. Google Analytics Integration:\nTrack user activity with built-in support for Google Analytics. SEO-Friendly:\nOptimized for search engines to improve visibility. Commit SHA in Footer:\nDisplay the current commit SHA for version tracking. Self-Hosted Assets:\nCompliant with GDPR / EU-DSGVO regulations by hosting all assets locally. Bootstrap Icons:\nBeautiful, lightweight icons integrated with Bootstrap Icons. Page Other Posts suggestion below a post. Social-Media Share buttons on posts. Syntax highlighting. Cover image for each post (with Responsive image support). Card based theme. To customize the image placement within a card, the Lightbi theme offers four flexible options:\nImage at the top of the card Image in the middle of the card Image at the bottom of the card No image To configure this, use the previewCardImagePlacement parameter in the hugo.toml file. Set it as follows:\nFor the image at the top: previewCardImagePlacement = \"top\" For the image in the middle: previewCardImagePlacement = \"middle\" For the image at the bottom: previewCardImagePlacement = \"bottom\" For no image: previewCardImagePlacement = \"none\" This gives you full control over how the image is displayed in the card layout.\n","description":"In this blog post, I’ll walk through the key features of the Lightbi theme and how to make the most of them for a visually appealing, user-friendly website.","tags":["hugo","blog"],"title":"Features of Lightbi","uri":"/xuan-site/post/2020/features-of-lightbi/"},{"content":"Wiki Checkout the wiki page for detailed documentation of the theme features.\nSupport \u0026 Contribution Star 🌟 this repository to show your support! Help spread the word about Hugo Lightbi by sharing it on social media and recommending it to your friends and colleagues. Found a bug? Report it via GitHub Issues to help us improve. Have feature ideas? Start a conversation in GitHub Discussions. Got questions? Ask away in our GitHub Discussions community. Credits Beautiful Hugo from which Lightbi was forked. Unsplash for Images. About This is an adaptation of the Beautiful Hugo by Michael Romero. It supports most of the features of the original theme, and many new features. It has diverged from the original theme over time, with several updates.\nLicense MIT Licensed, see LICENSE.\n","description":"In this post, I’ll outline about the theme, along with ways to support and contribute to the this theme...","tags":["blog"],"title":"More about Lightbi","uri":"/xuan-site/post/2020/more-about-lightbi/"},{"content":"Hugo shortcodes are powerful tools for adding custom HTML or other special content within Markdown files without complex code. They enable enhanced flexibility and are a core part of Hugo’s functionality, offering reusable snippets for embedding media, custom components, or dynamic content. Below, we’ll explore what shortcodes are and highlight some popular examples.\nWhat are Hugo Shortcodes? Shortcodes in Hugo are like mini-templates that simplify embedding specialized content into a page. Hugo has built-in shortcodes, and users can create custom ones. For instance, to embed a YouTube video, instead of writing the full HTML, you can use a shortcode like {{/*\u003c youtube \"video-id\" \u003e */}}.\nCommon Built-in Shortcodes Here are a few popular Hugo shortcodes and how to use them:\nYouTube Embed:\nhttps://www.youtube.com/watch?v=3qHkcs3kG44 Shortcode:\n{{\u003c youtube 3qHkcs3kG44 \u003e}} Rendered output: This shortcode takes a YouTube video ID, simplifying the process of embedding videos on your page.\nFigure: Shortcode:\n{{/*\u003c figure src=\"/img/posts/img-0.jpg\" title=\"Sample Image\" \u003e*/}} Rendered output: Sample Image This allows you to easily add images with captions and titles, handling image display responsively.\nGist (GitHub Snippets):\nShortcode:\n{{/*\u003c gist spf13 7896402 \u003e */}} Rendered: This integrates GitHub Gists by taking the username and gist ID, perfect for adding code snippets from GitHub.\nTwitter url:\nhttps://twitter.com/binovarghese_/status/1758148486510317907 Shortcode:\n{{\u003c twitter user=\"binovarghese_\" id=\"1758148486510317907\" \u003e}} Rendered: {{\u003c twitter user=“binovarghese_” id=“1758148486510317907” \u003e}}\nBenefits of Shortcodes Using shortcodes in Hugo streamlines content creation and ensures consistency across pages, saving time on repeated elements and complex HTML structures. With custom shortcodes, you can build rich, interactive content while keeping Markdown files clean and easy to manage.\nFor more details, check out Hugo’s official shortcode documentation.\n","description":"Hugo shortcodes are powerful tools for adding custom HTML or other special content within Markdown files without complex code...","tags":["shortcodes"],"title":"Understanding Hugo Shortcodes","uri":"/xuan-site/post/2020/understanding-hugo-shortcodes/"},{"content":"To create your own shortcodes in Hugo, add an HTML file in layouts/shortcodes/. This theme provides the following useful custom shortcodes:\nInfo card Displays information in a card format.\nShortcode {{/* \u003c info_cards header=\"lorem-ipsum\" title=\"What is Lorem Ipsum?\" content=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\" \u003e */}} Output What is Lorem Ipsum? Lorem Ipsum is simply dummy text of the printing and typesetting industry. Read this for more details and code.\nCard shortcode Adds cards with text and links.\nShortcode {{/* \u003c bs_img_card title=\"Some\" link=\"https://some.com/\" descr=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\" \u003e */}} {{/* \u003c bs_img_card title=\"Example\" link=\"https://www.example.io/\" descr=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\" \u003e */}} {{/* \u003c bs_img_card title=\"Here\" link=\"https://www.here.com/\" descr=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\" \u003e */}} Output Some Lorem Ipsum is simply dummy text of the printing and typesetting industry.\nExample Lorem Ipsum is simply dummy text of the printing and typesetting industry.\nHere Lorem Ipsum is simply dummy text of the printing and typesetting industry.\nRead this for more details and code.\nDetails This simply adds the html5 detail attribute, supported on all modern browsers. Use it like this:\nShortcode {{/* \u003c details \"This is the details title (click to expand)\" \u003e */ }} Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger. {{ /* \u003c /details \u003e */}} Output This is the details title (click to expand) Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger. Split This adds a two column side-by-side environment (will turn into 1 col for narrow devices):\nShortcode {{ /* \u003c columns \u003e */ }} This is column 1. {{ /* \u003c column \u003e */ }} This is column 2. {{ /* \u003c endcolumns \u003e */ }} Output This is column 1. This is column 2. ","description":"You can create your own shortcodes for unique needs by adding an HTML file to the `layouts/shortcodes/` directory. Below are the custom shortcodes availble in this theme...","tags":["shortcodes"],"title":"Lightbi Custom Shortcodes","uri":"/xuan-site/post/2020/custom-shortcodes/"},{"content":" Experimental feature This feature is currently in experimental mode, so breaking changes may occur. Please use it carefully. Here’s a custom Hugo shortcode that creates an image gallery in a masonry style using GLightbox, allowing you to specify a folder containing images. This approach will display images from a specified folder in a masonry layout, and each image will open in a lightbox when clicked.\nShortcode:\n{{/*\u003c img_gallery folder=\"img/travel/\" \u003e*/}} Output: ","description":"In this post, we'll cover how to install Hugo and set up your first website with the Lightbi theme...","tags":["hugo","blog"],"title":"Image Gallery Shortcode","uri":"/xuan-site/post/2020/image-gallery/"},{"content":"Hosting a Hugo site on Netlify is an effective solution for deploying static websites, combining Hugo’s speed with Netlify’s robust features like continuous deployment, a user-friendly dashboard, and advanced build settings.\nWhy Use Netlify? Netlify is popular for its ease of use, free hosting tier, and powerful features like automated builds, custom domain support, and built-in SSL. With Hugo’s efficient static site generation, deploying on Netlify enables fast, seamless updates and management.\nStep 1: Set Up netlify.toml Configuration The netlify.toml file is essential for configuring build settings in Netlify. Here’s a setup tailored for various deployment environments, including production, deploy previews, and branch deploys.\nAdd the following netlify.toml file to your Hugo project’s root directory:\n[build] publish = \"public\" command = \"hugo --gc --minify\" [context.production.environment] HUGO_VERSION = \"0.134.0\" HUGO_ENV = \"production\" HUGO_ENABLEGITINFO = \"false\" [context.split1] command = \"hugo --gc --minify --enableGitInfo\" [context.split1.environment] HUGO_VERSION = \"0.134.0\" HUGO_ENV = \"production\" [context.deploy-preview] command = \"hugo --gc --minify --buildFuture -b $DEPLOY_PRIME_URL\" [context.deploy-preview.environment] HUGO_VERSION = \"0.134.0\" [context.branch-deploy] command = \"hugo -b $DEPLOY_PRIME_URL\" [context.branch-deploy.environment] HUGO_VERSION = \"0.134.0\" [context.next.environment] HUGO_ENABLEGITINFO = \"false\" Explanation of Key Parameters Build Command: hugo --gc --minify triggers garbage collection (--gc) and minifies output. HUGO_VERSION: Specifies the Hugo version to avoid compatibility issues. HUGO_ENABLEGITINFO: Used for tracking commit metadata in production. Deployment Contexts: Production: Builds optimized, production-ready files. Deploy Preview: Builds the site using the pull request URL, helpful for staging. Branch Deploy: Enables previews for branches other than the main one. Step 2: Connect Your Repository to Netlify Log In to Netlify: Go to Netlify.\nCreate a New Site: Choose “New site from Git” from the dashboard.\nSelect Your Repository: Choose GitHub, GitLab, or Bitbucket, authenticate, and select your Hugo site repository.\nConfigure Build Settings:\nBuild Command: Leave as hugo. Publish Directory: Set as public (Netlify automatically reads from netlify.toml if it’s present). Deploy Your Site: Click “Deploy site” to initiate the first build. Netlify will pull from your repository, build, and deploy the site, which you can access via the provided default Netlify URL (e.g., https://example-site.netlify.app).\nStep 3: Preview and Customize Your Site Once the build completes, visit the live preview URL to verify that your site is working correctly.\nStep 4: Set Up a Custom Domain (Optional) To configure a custom domain:\nGo to the Netlify dashboard, select “Domain settings,” and add your domain. Follow the provided DNS setup instructions. If you want Netlify to manage DNS, you can transfer the domain or add a Netlify DNS record. Netlify automatically provisions an SSL certificate through Let’s Encrypt, adding secure HTTPS to your site. Step 5: Enable Continuous Deployment Netlify supports continuous deployment by default. Each push to your repository triggers a new build and redeploys the latest changes. This makes it easy to manage updates or collaborate with others on site changes.\nConclusion Deploying a Hugo site on Netlify offers a streamlined experience, leveraging Hugo’s fast builds with Netlify’s advanced hosting features. With a few simple steps, your site is live, secure, and ready for easy content updates directly from Git.\nThis setup is ideal for efficient deployment with customized environments, making it easy to manage development and production versions and maintain a polished, dynamic website.\n","description":"Hosting a Hugo site on Netlify is an effective solution for deploying static websites, combining Hugo’s speed with Netlify’s robust features..","tags":["hugo","Netlify"],"title":"Hosting Your Hugo Site on Netlify","uri":"/xuan-site/post/2020/netlify-configuration/"},{"content":"Below is a list of configurable parameters in the Lightbi theme, along with descriptions to help you customize your site effectively. You can be adjust the below parameters in your hugo.toml file.\nTheme Parameters readingTime\nType: Boolean (true or false) Description: When set to true, displays an estimated reading time for each post. This helps readers gauge how long it will take to read the content. wordCount\nType: Boolean Description: Enables or disables the word count display for each post. Useful for readers interested in post length. hideAuthor\nType: Boolean Description: Controls the visibility of the author information on each post. Set to false to display the author section or true to hide it. previewCardImagePlacement\nType: String (\"top\" or \"middle\" or \"bottom\" or \"none\" ) Description: Determines where the preview image appears on post cards in lists or summaries. \"top\" places the image above the text, “middle”: Centers the image within the text area, \"bottom\" places below the text, and \"none\" hides the preview image entirely,. hidePostImage\nType: Boolean Description: Controls the visibility of the featured image on individual post pages. Set to true to hide post images or false to show them. useHLJS\nType: Boolean Description: Enables Highlight.js, a JavaScript library for syntax highlighting in code blocks. Set to true to use Highlight.js for syntax highlighting. socialShare\nType: Boolean Description: Adds social sharing buttons to posts, allowing readers to share content on various social media platforms. showRelatedPosts\nType: Boolean Description: When enabled, displays related posts at the bottom of each post to encourage further reading. gcse\nType: Boolean Description: Enables Google Custom Search Engine integration for site search functionality. Requires a configured search engine ID. Lastmod\nType: Boolean Description: Controls whether the “Last Modified” date is shown on posts, which can be helpful for showing recent updates. rss\nType: Boolean Description: Enables RSS feed generation for the site, making it easy for users to subscribe to your content. pagination\nType: Integer Description: Sets the number of posts displayed per page on list or archive pages. description\nType: String Description: A short description of your website that may appear in the metadata or be used for SEO. lunrSearch\nType: Boolean Description: Enables Lunr.js search, a client-side search engine, allowing users to search content directly on the site. These parameters allow for easy customization and control over how your Hugo theme behaves and displays content.\n","description":"Below is a list of configurable parameters in the Lightbi theme, along with descriptions to help you customize your site effectively.","tags":["hugo","blog"],"title":"Parameters in Lightbi","uri":"/xuan-site/post/2020/parameters/"},{"content":"Articles about learn in public, brag document and free stuffs.\nLearn In Public If there’s a golden rule, it’s this one, so I put it first. All the other rules are more or less elaborations of this rule #1.\nA habit of creating learning exhaust:\nWrite blogs and tutorials and cheatsheets. Speak at meetups and conferences. Ask and answer things on Stackoverflow or Reddit. Avoid the walled gardens like Slack and Discord, they’re not public. Make Youtube videos or Twitch streams. Start a newsletter. Draw cartoons. Link Make Free Stuff The best growth hack is still to build something people enjoy, then attaching no strings to it. You’d be surprised how far that can get you.\nMake free stuff! The web is still for everyone.\nLink\nHow to hone your new superpower: teaching I learned early in my developer journey that teaching others is an effective way to quickly deepen my understanding of a new concept or technology. I’ve found that needing to articulate a particular concept to others causes me to revisit my assumptions and leads me to do additional research to fill any knowledge gaps.\nLink\nYour future self will thank you: Building your personal documentation. Developers can take a DRY approach to how they search for answers to questions they encounter multiple times. By relying on an internal database (or “second brain”) they can reduce their reliance on external search engines.\nLink\nBrag now, remember later: Document your accomplishments Given five minutes notice to summarize your recent professional and personal accomplishments and wins, how detailed would your response be? Would that be enough time for you to sufficiently capture some of the things you’re most proud of from the past few months or years?\nLink\nThe most successful developers share more than they take One of the questions I always ask successful bloggers is: what motivated you to start? The answer is always the same: I did it for myself. Whatever your work, you should embrace the philosophy of “public by default”.\nPublic-by-default means this: everytime you create something, learn something, or just notice something’s interesting, do it in public. This may seem daunting—writing blog posts, helping the community and transforming ideas from thoughts into words all takes time. But sharing is like a muscle, and by committing to a regular schedule, you become much more efficient. This consistency of volume is also key to reaping the benefits of sharing.\nTo truly embrace public-by-default, it’s not enough to share your successful projects and knowledge, but additionally to bring the humility to share your learning and failures.\nLink\n","description":"Articles about learning in public, brag document and free stuffs.","tags":["newsletter"],"title":"Collections No.1","uri":"/xuan-site/collections/2023/collections/"},{"content":"Journaling is not just a little thing you do to pass the time, to write down your memories—though it can be—it’s a strategy that has helped brilliant, powerful and wise people become better at what they do.\n","title":"Note 1","uri":"/xuan-site/csnotes/2020/change/"},{"content":"Journaling is not just a little thing you do to pass the time, to write down your memories—though it can be—it’s a strategy that has helped brilliant, powerful and wise people become better at what they do.\n","title":"Note 2","uri":"/xuan-site/csnotes/2020/change2/"},{"content":"Journaling is not just a little thing you do to pass the time, to write down your memories—though it can be—it’s a strategy that has helped brilliant, powerful and wise people become better at what they do.\n","title":"Note 3","uri":"/xuan-site/csnotes/2020/change3/"},{"content":"What is Markdown? Markdown is a lightweight, plain-text formatting language used for creating styled text through simple, readable syntax. Developed by John Gruber in 2004, its goal is to allow writers to format documents without complex code, making it easy to read and edit. The beauty of Markdown lies in its simplicity, allowing creators to add headings, lists, images, links, and more by typing a few symbols around their text.\nFor instance:\nTyping **bold text** makes text bold. Writing # at the beginning of a line turns it into a heading, and more # symbols make it a smaller subheading. Lists can be created using - or * for bullets or numbers for ordered lists. Because Markdown converts text to HTML, it’s perfect for web content creation, blog posts, documentation, and technical writing, all while remaining easy to format in a non-HTML context. Markdown files, saved as .md or .markdown files, are compatible with many popular platforms like GitHub, Reddit, and Hugo, making it a preferred choice for developers, writers, and content creators.\nUsing Markdown allows for better productivity and collaboration because anyone can edit or view Markdown text without needing HTML or specialized knowledge. Its clean, minimalistic approach makes it accessible and effective for writing that needs to balance readability and formatting.\n","description":"Markdown is a lightweight, plain-text formatting language used for creating styled text through simple, readable syntax....","tags":["markdown"],"title":"What is Markdown ?","uri":"/xuan-site/post/2020/markdown/"},{"content":"Headings To create a heading, add number signs (#) in front of a word or phrase. The number of number signs you use should correspond to the heading level. For example, to create a heading level three (h3), use three number signs (e.g., ### My Header). Heading level 1 Heading level 2 Heading level 3 Heading level 4 Heading level 5 Heading level 6 Paragraphs To create paragraphs, use a blank line to separate one or more lines of text.\nMarkdown is a plain text format for writing structured documents, based on formatting conventions from email and usenet.\nMarkdown was developed in 2004 by John Gruber in collaboration with Aaron Swartz. Gruber wrote the first markdown-to-html converter in Perl, and it soon became widely used in websites. By 2014 there were dozens of implementations in many languages.\nBold To bold text, add two asterisks or underscores before and after a word or phrase. To bold the middle of a word for emphasis, add two asterisks without spaces around the letters.\n**bold text**\nItalic To italicize text, add one asterisk or underscore before and after a word or phrase. To italicize the middle of a word for emphasis, add one asterisk without spaces around the letters.\n*Italic*\nCode Inline Code To create inline code, wrap with backticks ` . To create a code block, either indent each line by 4 spaces, or place 3 backticks ``` on a line above and below the code block.\n`This is an inline code.`\nCode Blocks \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003cbody\u003e \u003ch1\u003eMy First Heading\u003c/h1\u003e \u003cp\u003eMy first paragraph.\u003c/p\u003e \u003c/body\u003e \u003c/html\u003e Blockquote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nOrdered List First item Second item Third item Ordered List First item Second item Third item Images To add an image, add an exclamation mark (!), followed by alt text in brackets, and the path or URL to the image asset in parentheses. You can optionally add a title after the URL in the parentheses.\nHorizontal Rule For horizontal rules, you can use three dash symbol together as below.\n---\nBackslash Escapes Markdown will allow to use backlash escapes to generate litertal characters which is used in the markdown itself fot formatting the syntax.\nString: \\* Literal astrisks\\*\nOutput: * Literal astrisks*\nFoot notes In a paragraph you can use the square bracket with a caret symbol along with a number1 to indicate a foot note: [^2].\n[^1]: In the below section you can add this for showing the footnotes.\nTo view more about basic syntaxs, click here.\nThis is an example for footnotes. ↩︎\n","description":"Article showcasing basic Markdown syntax and formatting for HTML elemenets. To create a heading, add number signs (#) in front of a word or phrase..","tags":["markdown","syntax"],"title":"Markdown Syntax Guide","uri":"/xuan-site/post/2020/syntax/"},{"content":"Who am I ?! This is the most asked question in my life. Yet no clear answer has yet been found.\nAs a child, the answer to this question was simple. Say my name to the question of who. Aha ..! Simple and beautiful. In that answer, parents and siblings in adolescence. I thought to myself that the answer was too clear.\nWhen I started asking myself this question at a young age when I was beginning to recognize many things, I began to feel that the answer was becoming less clear. Who am I ?! If you ask me who I am. Anyone else. Still no answer to the question. Who am I?\nSeek, that is the way to find the answer. Knock, and it shall be opened unto you !! The investigation has begun.\nThere is no doubt where to start. From me. I began to search the bottom of my heart in the silence. From there the search went on to the printed books. Couldn’t figure it out from there. No suitable gurus could be found to answer this question.\nThe search continued, and the only sound in my heart was to go ahead. The answer is nowhere to be found. So I’m still looking around, and the answer to my question is hidden somewhere.\nI do not know, some questions take time to answer. The meaning of a single word question is getting bigger and bigger. Who am I ?! What is my identity ?! What are my missions ?! Can I know the light of the answers ?!\nThose who ask the same questions go up the steps of consciousness and seem to be enlightened and insane. What will I become at the end of this question? !! Buddha or mad !! Anyone should have a small smile left at the end. The smile of recognition.\nWho am I, let the question continue.\n","description":"Who am I ?! This is the most asked question in my life. Yet no clear answer has yet been found...","tags":["stoicism"],"title":"Who am I ?!","uri":"/xuan-site/post/2020/who-am-i/"}]
